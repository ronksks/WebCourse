//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace web_course
{
    using System;
    using System.Collections.Generic;
    
    public partial class Recipe
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Recipe()
        {
            this.IngredientsInRecipes = new HashSet<IngredientsInRecipe>();
        }
    
        public int id { get; set; }
        public string title { get; set; }
        public string img_path { get; set; }
        public Nullable<int> rate { get; set; }
        public string description { get; set; }
        public int owner { get; set; }
        public Nullable<int> time { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IngredientsInRecipe> IngredientsInRecipes { get; set; }
        public virtual User User { get; set; }

        internal bool isVegan()
        {
            foreach (IngredientsInRecipe i in IngredientsInRecipes)
            {
                if (i.Ingredient.containsMeat() || i.Ingredient.containsDairy() || i.Ingredient.containsFish())
                {
                    return false;
                }
            }
            return true;
        }

        internal bool containsDairy()
        {
            foreach (IngredientsInRecipe i in IngredientsInRecipes)
            {
                if (i.Ingredient.containsDairy())
                {
                    return true;
                }
            }
            return false;
        }

        internal bool containsMeat()
        {
            foreach (IngredientsInRecipe i in IngredientsInRecipes)
            {
                if (i.Ingredient.containsMeat())
                {
                    return true;
                }
            }
            return false;
        }

        internal bool containsFish()
        {
            foreach (IngredientsInRecipe i in IngredientsInRecipes)
            {
                if (i.Ingredient.containsFish())
                {
                    return true;
                }
            }
            return false;
        }
        public override string ToString()
        {
            List<String> l = new List<string>() { Convert.ToString(id), "'" + title.Trim() + "'", Convert.ToString(rate), "'" + description.Trim().Replace(",", "|||").Replace(System.Environment.NewLine, "//n")+"'", Convert.ToString(owner), Convert.ToString(time) };
            List<String> ings = new List<String>();
            foreach (IngredientsInRecipe i in IngredientsInRecipes)
            {
                ings.Add(i.ToString());
            }
            String all_ings = "'"+ String.Join("--- ", ings.ToArray())+"'";
            l.Add(all_ings);
            return String.Join(", ", l.ToArray());
        }
    }
}
