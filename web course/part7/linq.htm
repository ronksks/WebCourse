<!DOCTYPE html>
<html>
<head>
    <title>Introduction to JS LINQ</title>
    <link href="inc/style.css" rel="stylesheet" />
    <script src="inc/jquery-2.0.0.min.js"></script>
    <script src="inc/angular.min.js"></script>
    <script src="inc/linq.min.js"></script>
    <style>
        input {
            width: 100px;
        }
    </style>
    <script>
        angular.module('myApp', []).controller('namesCtrl', function ($scope) {
            $scope.names = [
               { name: 'Jani', country: 'Norway', rate: 15 },
               { name: 'Hege', country: 'Sweden', rate: 10 },
               { name: 'Kai', country: 'Denmark', rate: 83 },
               { name: 'Bill', country: 'Norway', rate: 5 },
               { name: 'Peter', country: 'Sweden', rate: 9 },
               { name: 'Olga', country: 'Denmark', rate: 42 }
            ];
            $scope.namesBac = angular.copy($scope.names);

            $scope.changeElement = function () {
                $scope.names[0].name = "Peter";
                $(event.target).parent().next().text("from controller");
            }
        });
    </script>
    <script>
        var scope;
        $(document).ready(function () {
            scope = angular.element($("body")).scope();
        })

        function FilterByRate(r) {
            scope.names = Enumerable.From(scope.namesBac)
                    .Where(function (x) { return x.rate > r })
                    .OrderBy(function (x) { return x.rate })
                    .ToArray();
            scope.$apply();
        }

        function SelectNames() {
            scope.names = Enumerable.From(scope.namesBac)
                    .Select(function (x) { return { name: x.name, rate: x.rate } })
                    .OrderBy(function (x) { return x.rate })
                    .ToArray();
            scope.$apply();
        }

        function SelectBest() {
            scope.selected = Enumerable.From(scope.names)
                    .Select(function (x) { return { name: x.name, rate: x.rate } })
                    .OrderBy(function (x) { return x.rate })
                    .LastOrDefault();//.FirstOrDefault();
            scope.$apply();
        }

        function Calculate() {
            
            scope.sum = Enumerable.From(scope.names).Sum("$.rate"); //ar.Sum();
            scope.average = Enumerable.From(scope.names).Average("$.rate").toFixed(0);
            scope.max = Enumerable.From(scope.names).Max("$.rate");

            // alternative
            //var ar = Enumerable.From(scope.names)
            //        .Select(function (x) { return x.rate });
            //scope.sum = Enumerable.From(scope.names).ar.Sum();
            //scope.average = ar.Average().toFixed(0);
            //scope.max = ar.Max();

            scope.$apply();
        }

        function Reset() {
            //scope.names = JSON.parse(JSON.stringify(scope.namesBac));
            scope.names = angular.copy(scope.namesBac);
            scope.selected = null;
            scope.$apply();
        }
    </script>
</head>
<body ng-app="myApp" ng-controller="namesCtrl">
    <div class="frame" style="width:400px">
        <ul>
            <li ng-repeat="x in names">
                <span ng-repeat="prop in x track by $index">
                    <span ng-if="$index > 0">,</span>{{prop}}
                </span>
            </li>
        </ul>
        <div style="margin-top:10px;">
            <button data-ng-click="changeElement()">Change</button>
            <button onclick="FilterByRate(10)">Rate &gt; 10</button>
            <button onclick="SelectNames()">Names only</button>
            <button onclick="SelectBest()">Best</button>
            <button onclick="Calculate()">Calculate</button>
            <button onclick="Reset()">Reset</button>
        </div>
        <div style="height:22px;color:red;margin-top:10px;">Selected: {{selected}}</div>
        <div style="height:22px;color:red;margin-top:10px;">Sum: {{sum}}, Average: {{average}}, Max: {{max}}</div>
    </div>
</body>
</html>
